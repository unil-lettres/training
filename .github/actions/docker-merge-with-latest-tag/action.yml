name: Docker Merge With Latest Tag
description: Merge uploaded digests and tag both latest and the latest Git tag if present
inputs:
  image_repository:
    description: Docker image repository (e.g., user/repo)
    required: true
  tag_latest:
    description: Tag to apply when on master (e.g., latest)
    required: true
  tag_from_git:
    description: Prefix or format for a tag derived from the latest Git tag (e.g., worker-)
    required: false
    default: ''
  dockerhub_username:
    description: Docker Hub username
    required: true
  dockerhub_token:
    description: Docker Hub token/password
    required: true
runs:
  using: composite
  steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Get tags
      id: get_tags
      if: github.ref_type == 'tag'
      uses: JinoArch/get-latest-tag@latest
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.image_repository }}
        tags: |
          type=raw,value=${{ inputs.tag_latest }},enable=${{ github.ref == 'refs/heads/master' }}
          type=raw,value=${{ inputs.tag_from_git }}${{ steps.get_tags.outputs.latestTag }},enable=${{ github.ref_type == 'tag' }}
    - name: Create manifest list and push
      shell: bash
      working-directory: ${{ runner.temp }}/digests
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ inputs.image_repository }}@sha256:%s ' *)
    - name: Inspect image
      shell: bash
      run: |
        docker buildx imagetools inspect ${{ inputs.image_repository }}:${{ steps.meta.outputs.version }}
