name: docker-prod
on:
  push:
    branches:
      - "master"
    tags:
      - "*"
permissions: read-all

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ linux/amd64, linux/arm64 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build image
        uses: ./.github/actions/docker-build
        with:
          dockerfile: ./docker/app.dockerfile
          target: prod
          platform: ${{ matrix.arch }}
          image_repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          name_prefix: app
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  merge:
    name: Merge
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
      - name: Merge digests and tag
        uses: ./.github/actions/docker-merge-with-latest-tag
        with:
          image_repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          tag_latest: latest
          tag_from_git: ''
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  update-description:
    name: Update Description
    runs-on: ubuntu-latest
    needs: [merge]
    if: success()
    continue-on-error: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ vars.DOCKERHUB_REPOSITORY }}
