name: ci
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        php-versions: [ '8.0', '8.1' ]

    runs-on: ubuntu-20.04

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CI_WEBHOOK_URL }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      CI: gha

    services:
      mariadb:
        image: mariadb:10.4
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: training_test
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=5

    name: PHP${{ matrix.php-versions }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node Setup
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: PHP Setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - name: Show PHP version
        run: php -v

      - name: Cache composer
        uses: actions/cache@v3
        with:
          path: ~/.cache/composer
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Mysql configuration
        run: mysql --protocol=tcp --user=root --execute='SET GLOBAL sql_mode = "";'

      - name: Add Backpack credentials
        working-directory: ./site
        run: composer config http-basic.backpackforlaravel.com ${{ secrets.BACKPACK_USERNAME }} ${{ secrets.BACKPACK_PASSWORD }}

      - name: Build app
        id: app-build
        working-directory: ./site
        run: ./setup.sh

      - name: Check PHP code style
        id: app-php-style
        working-directory: ./site
        run: ./vendor/bin/pint --test -v
        continue-on-error: true

      - name: Serve
        working-directory: ./site
        run: |
          php artisan dusk:chrome-driver --detect
          google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &
          php artisan serve &

      - name: Execute functional tests
        id: app-test-functional
        working-directory: ./site
        run: php artisan dusk

      - name: Execute unit tests
        id: app-test-unit
        working-directory: ./site
        run: vendor/bin/phpunit

      - name: Expose failed tests
        if: ${{ failure() }}
        working-directory: ./site
        run: php artisan email:failure

      - name: Notify Slack
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#-bot-ci'
        if: always()
