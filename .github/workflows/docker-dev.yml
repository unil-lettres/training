name: docker-dev
on:
  push:
    branches:
      - "development"
permissions: read-all

jobs:
  build:
    name: Build app (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { arch: linux/amd64, os: ubuntu-latest }
          - { arch: linux/arm64, os: ubuntu-24.04-arm }

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: development

      - name: Build image
        uses: unil-lettres/actions/docker-build@v2.2.0
        with:
          dockerfile: ./docker/app.dockerfile
          target: dev
          platform: ${{ matrix.arch }}
          image_repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          name_prefix: app
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  merge:
    name: Merge
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: development

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Merge digests
        uses: unil-lettres/actions/docker-merge@v2.2.0
        with:
          image_repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          tag: dev-latest
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  update-description:
    name: Update Description
    runs-on: ubuntu-latest
    needs: [merge]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: development

      - name: Update description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ vars.DOCKERHUB_REPOSITORY }}
